// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "04/12/2023 23:47:01"

// 
// Device: Altera 5CEBA4F23C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module questao4 (
	clk,
	x,
	display1,
	display2);
input 	clk;
input 	x;
output 	[6:0] display1;
output 	[6:0] display2;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \display1[0]~output_o ;
wire \display1[1]~output_o ;
wire \display1[2]~output_o ;
wire \display1[3]~output_o ;
wire \display1[4]~output_o ;
wire \display1[5]~output_o ;
wire \display1[6]~output_o ;
wire \display2[0]~output_o ;
wire \display2[1]~output_o ;
wire \display2[2]~output_o ;
wire \display2[3]~output_o ;
wire \display2[4]~output_o ;
wire \display2[5]~output_o ;
wire \display2[6]~output_o ;
wire \clk~input_o ;
wire \x~input_o ;
wire \Selector3~0_combout ;
wire \est.S3~q ;
wire \Selector2~0_combout ;
wire \est.S2~q ;
wire \Selector1~0_combout ;
wire \est.S1~q ;
wire \Selector0~0_combout ;
wire \est.S0~q ;
wire \d1~0_combout ;
wire \d2~0_combout ;


cyclonev_io_obuf \display1[0]~output (
	.i(vcc),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[0]~output .bus_hold = "false";
defparam \display1[0]~output .open_drain_output = "false";
defparam \display1[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[1]~output (
	.i(!\d1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[1]~output .bus_hold = "false";
defparam \display1[1]~output .open_drain_output = "false";
defparam \display1[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[2]~output (
	.i(!\d1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[2]~output .bus_hold = "false";
defparam \display1[2]~output .open_drain_output = "false";
defparam \display1[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[3]~output (
	.i(!\d1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[3]~output .bus_hold = "false";
defparam \display1[3]~output .open_drain_output = "false";
defparam \display1[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[4]~output .bus_hold = "false";
defparam \display1[4]~output .open_drain_output = "false";
defparam \display1[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[5]~output .bus_hold = "false";
defparam \display1[5]~output .open_drain_output = "false";
defparam \display1[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display1[6]~output (
	.i(!\d1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display1[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \display1[6]~output .bus_hold = "false";
defparam \display1[6]~output .open_drain_output = "false";
defparam \display1[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[0]~output (
	.i(vcc),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[0]~output .bus_hold = "false";
defparam \display2[0]~output .open_drain_output = "false";
defparam \display2[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[1]~output (
	.i(!\d2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[1]~output .bus_hold = "false";
defparam \display2[1]~output .open_drain_output = "false";
defparam \display2[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[2]~output (
	.i(!\d2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[2]~output .bus_hold = "false";
defparam \display2[2]~output .open_drain_output = "false";
defparam \display2[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[3]~output (
	.i(!\d2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[3]~output .bus_hold = "false";
defparam \display2[3]~output .open_drain_output = "false";
defparam \display2[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[4]~output .bus_hold = "false";
defparam \display2[4]~output .open_drain_output = "false";
defparam \display2[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[5]~output .bus_hold = "false";
defparam \display2[5]~output .open_drain_output = "false";
defparam \display2[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \display2[6]~output (
	.i(!\d2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\display2[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \display2[6]~output .bus_hold = "false";
defparam \display2[6]~output .open_drain_output = "false";
defparam \display2[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x~input (
	.i(x),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x~input_o ));
// synopsys translate_off
defparam \x~input .bus_hold = "false";
defparam \x~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Selector3~0 (
// Equation(s):
// \Selector3~0_combout  = (!\x~input_o  & (!\est.S0~q )) # (\x~input_o  & ((\est.S2~q )))

	.dataa(!\est.S0~q ),
	.datab(!\x~input_o ),
	.datac(!\est.S2~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector3~0 .extended_lut = "off";
defparam \Selector3~0 .lut_mask = 64'h8B8B8B8B8B8B8B8B;
defparam \Selector3~0 .shared_arith = "off";
// synopsys translate_on

dffeas \est.S3 (
	.clk(\clk~input_o ),
	.d(\Selector3~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\est.S3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \est.S3 .is_wysiwyg = "true";
defparam \est.S3 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector2~0 (
// Equation(s):
// \Selector2~0_combout  = (!\x~input_o  & ((\est.S3~q ))) # (\x~input_o  & (\est.S1~q ))

	.dataa(!\est.S1~q ),
	.datab(!\est.S3~q ),
	.datac(!\x~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector2~0 .extended_lut = "off";
defparam \Selector2~0 .lut_mask = 64'h3535353535353535;
defparam \Selector2~0 .shared_arith = "off";
// synopsys translate_on

dffeas \est.S2 (
	.clk(\clk~input_o ),
	.d(\Selector2~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\est.S2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \est.S2 .is_wysiwyg = "true";
defparam \est.S2 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (!\x~input_o  & ((\est.S2~q ))) # (\x~input_o  & (!\est.S0~q ))

	.dataa(!\est.S0~q ),
	.datab(!\x~input_o ),
	.datac(!\est.S2~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector1~0 .extended_lut = "off";
defparam \Selector1~0 .lut_mask = 64'h2E2E2E2E2E2E2E2E;
defparam \Selector1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \est.S1 (
	.clk(\clk~input_o ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\est.S1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \est.S1 .is_wysiwyg = "true";
defparam \est.S1 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (!\x~input_o  & (!\est.S1~q )) # (\x~input_o  & ((!\est.S3~q )))

	.dataa(!\est.S1~q ),
	.datab(!\est.S3~q ),
	.datac(!\x~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector0~0 .extended_lut = "off";
defparam \Selector0~0 .lut_mask = 64'hACACACACACACACAC;
defparam \Selector0~0 .shared_arith = "off";
// synopsys translate_on

dffeas \est.S0 (
	.clk(\clk~input_o ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\est.S0~q ),
	.prn(vcc));
// synopsys translate_off
defparam \est.S0 .is_wysiwyg = "true";
defparam \est.S0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \d1~0 (
// Equation(s):
// \d1~0_combout  = (!\est.S0~q ) # (\est.S1~q )

	.dataa(!\est.S0~q ),
	.datab(!\est.S1~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\d1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \d1~0 .extended_lut = "off";
defparam \d1~0 .lut_mask = 64'hBBBBBBBBBBBBBBBB;
defparam \d1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \d2~0 (
// Equation(s):
// \d2~0_combout  = (!\est.S0~q ) # (\est.S3~q )

	.dataa(!\est.S0~q ),
	.datab(!\est.S3~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\d2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \d2~0 .extended_lut = "off";
defparam \d2~0 .lut_mask = 64'hBBBBBBBBBBBBBBBB;
defparam \d2~0 .shared_arith = "off";
// synopsys translate_on

assign display1[0] = \display1[0]~output_o ;

assign display1[1] = \display1[1]~output_o ;

assign display1[2] = \display1[2]~output_o ;

assign display1[3] = \display1[3]~output_o ;

assign display1[4] = \display1[4]~output_o ;

assign display1[5] = \display1[5]~output_o ;

assign display1[6] = \display1[6]~output_o ;

assign display2[0] = \display2[0]~output_o ;

assign display2[1] = \display2[1]~output_o ;

assign display2[2] = \display2[2]~output_o ;

assign display2[3] = \display2[3]~output_o ;

assign display2[4] = \display2[4]~output_o ;

assign display2[5] = \display2[5]~output_o ;

assign display2[6] = \display2[6]~output_o ;

endmodule
